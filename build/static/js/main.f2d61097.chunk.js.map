{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/Recipes.js","Components/Work.js","Components/About.js","Components/Section.js","App.js","reportWebVitals.js","index.js"],"names":["MyNavbar","scrollToTop","scroll","Navbar","scrolling","bg","expand","sticky","className","id","Brand","onClick","this","Toggle","aria-controls","Collapse","Nav","Item","Link","target","activeClass","to","spy","smooth","offset","duration","href","Component","Recipes","Container","as","Tab","defaultActiveKey","Row","Col","sm","md","variant","eventKey","activeClassName","Content","Pane","title","Card","Body","Title","Subtitle","Text","Work","rows","images","renderData","console","log","i","length","push","Img","src","nextRowCount","About","xs","alt","Section","subtitle","dark","lg","Image","fluid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d61097.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { Nav, Navbar, NavDropdown, Form, Button, FormControl } from 'react-bootstrap';\n\nexport default class MyNavbar extends Component {\n  scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  render() {\n    return (\n      <Navbar scrolling=\"true\" bg=\"light\" expand=\"lg\" sticky=\"top\" className=\"nav\" id=\"navbar\">\n           <Navbar.Brand className=\"nav-brand\" onClick={this.scrollToTop}>Kirtana Choragudi</Navbar.Brand>\n           <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n           <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"nav-items mr-auto\">\n          <Nav.Item className=\"nav-item\">\n            <Nav.Link\n              className=\"nav-link\"\n              target=\"blank\"\n              activeClass=\"active\"\n              to=\"education\"\n              spy={true}\n              smooth={true}\n              offset={-50}\n              duration={500}\n            >\n              About\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              activeClass=\"active\"\n              to=\"experience\"\n              spy={true}\n              smooth={true}\n              offset={-50}\n              duration={500}\n            >\n              Work\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              activeClass=\"active\"\n              to=\"recipes\"\n              spy={true}\n              smooth={true}\n              offset={-50}\n              duration={500}\n            >\n              Recipes\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"nav-item\">\n             <Nav.Link\n               className=\"nav-link\"\n               target=\"blank\"\n               activeClass=\"active\"\n               href=\"https://www.linkedin.com/in/kirtana-choragudi/\"\n\n             >\n               LinkedIn\n             </Nav.Link>\n           </Nav.Item>\n\n\n          </Nav>\n           </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { Tabs, Tab,  NavDropdown, Nav, Form, Button, FormControl, Card, Container, Col, Row } from 'react-bootstrap';\n\nclass Recipes extends Component {\n  render() {\n    return (\n      <div className=\"section section-recipes\" id=\"recipes\">\n        <div className=\"section-content \" >\n        <Container className=\"justify-content-md-center recipes-container \" as=\"div\" >\n        <h1 className=\"text-light\">Recipes</h1>\n\n\n<Tab.Container id=\"left-tabs-example\"  className=\"bg-white  shadow-sm\" defaultActiveKey=\"tikka-masala\" >\n  <Row className=\"align-content-center no-gutters recipes-row\" as=\"div\">\n    <Col sm={12} md={3} className=\"m-0 recipe-pill-col\">\n      <Nav variant=\"pills\" as=\"div\" className=\" m-0 flex-column justify-content-md-center align-content-center text-left rounded-sm\">\n      <Nav.Item  className=\"nav-item-pill\">\n        <Nav.Link activeClass=\"active-pill\" eventKey=\"tikka-masala\" className=\"recipe-pill rounded-0\">Mom's Tofu Tikka Masala</Nav.Link>\n      </Nav.Item >\n        <Nav.Item className=\"nav-item-pill\">\n          <Nav.Link activeClassName=\"active-pill\"  eventKey=\"cookies\" className=\" recipe-pill  rounded-0\">Vegan Cookie Brownies</Nav.Link>\n        </Nav.Item >\n        <Nav.Item className=\"nav-item-pill\">\n          <Nav.Link  activeClassName=\"active-pill\" eventKey=\"sp-gnocchi\" className=\"recipe-pill  rounded-0 \">Sweet Potato Gnocchi</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Col>\n    <Col sm={9} className=\"ml-0 full-height recipe-box-col\" as=\"div\">\n      <Tab.Content className=\"pl-0 ml-0 recipe-box-col\" defaultActiveKey=\"tikka-masala\">\n        <Tab.Pane className=\"full-height\" eventKey=\"cookies\" title=\"Vegan Cookie Brownies\">\n        <Card className=\"text-left recipe-card full-height\">\n          <Card.Body className=\"m-4 \">\n            <Card.Title>Vegan Cookie Brownies</Card.Title>\n           <Card.Subtitle className=\"mb-2 text-muted\">Cookie? Brownie? Both.</Card.Subtitle>\n          <Card.Text className=\"text-dark\">\n          <br/>\n            <h6 className=\"bold\" id=\"ingredients\"><b>Brownie Batter Ingredients</b></h6>\n            <ul>\n            <li>2 cups all-purpose flour</li>\n            <li>2 cups white sugar (granulated or unrefined cane sugar)</li>\n            <li>3/4 cups unsweetened cocoa powder (used @ghirardelli )</li>\n            <li>1 teaspoon baking powder</li>\n            <li>1 teaspoon salt</li>\n            <li>1 cup bananas (ripe, mashed)</li>\n            <li>1/4 cup unsweetened soy milk (or almond milk)</li>\n            <li>1/4 cup canola oil</li>\n            <li>1 teaspoon vanilla extract</li>\n            <li>1 cup dark dairy-free chocolate chips</li>\n            </ul>\n\n            <h6 className=\"bold\"><b>Cookie Sheet Ingredients</b></h6>\n            <ul>\n            <li>2 cups all-purpose flour</li>\n            <li>1 teaspoon baking powder</li>\n            <li>1 teaspoon baking soda</li>\n            <li>1/2 teaspoon fine salt</li>\n            <li>1/2 cup cane sugar</li>\n            <li>1/2 cup dark brown sugar</li>\n            <li>1/2 cup olive oil</li>\n            <li>1/2 cup almond milk</li>\n            <li>1 1/4 cups dark chocolate chips</li>\n            </ul>\n\n            <br/>\n              <h6 className=\"bold\" id=\"steps\"><b>Steps</b></h6>\n              <ol>\n              <li>To first make the cookie sheet, whisk together the flour, baking powder, baking soda, and salt for the cookies.</li>\n              <li>In a separate bowl, mix the appropriate cookie-recipe amounts of cane sugar, brown sugar, olive oil, and almond milk until well-combined.</li>\n              <li>Mix the wet and dry ingredients together.</li>\n              <li>Roll out the entire cookie dough ball to be a slab slightly longer and wider than the bottom of the 9x13 pan. Then, place the slab on a separate sheet, and store in the freezer.</li>\n              <li>Pre-heat oven to 350 degrees Fahrenheit. Cover the bottom with a 9x13 brownie pan with parchment paper or oil with coconut oil or vegan butter.</li>\n              <li>Mash 1 cup of bananas to begin the brownie batter</li>\n              <li>Mix the mashed bananas, soy milk, canola oil, vanilla extract, and white sugar</li>\n              <li>In a separate bowl, whisk together the flour, sugar, baking powder, and salt</li>\n              <li>Combine the dry and wet ingredients. Add small amounts at a time of more flour if too wet, or more milk if too thick.</li>\n              <li>Stir in dairy-free chocolate chips <i>Obviously, my favorite part</i></li>\n              <li>Pour brownie batter into prepped 9x13 pan. Bake brownies at 350F for 25 minutes, until just slightly under-baked.</li>\n              <li>Remove brownies from the oven and put the cookie dough slab on top of the brownies! Spread with hands to ensure full coverage - don't let any brownies peek :)</li>\n              <li>Return pan to the oven and bake for 10-15 more minutes, or until cookie layer has become golden brown. Test whether the brownies are ready by sticking a clean fork or toothpick straight into the cookie & brownies and seeing if there is leftover uncooked dough on the fork. <i>It's so chocolatey good that you might hit melty chocolate instead of actual uncooked dough so be sure to check.</i></li>\n              <li>Enjoy! If you'd like, melt 3/4 cup of dark chocolate with 2-3 tbsp of coconut oil for 15 seconds at time in microwave, stirring each time until it becomes extremely liquid-y! Then, drizzle chocolate on top of your cooled cookie brownie bars to your heart’s delight</li>\n              </ol>\n              <Link\n                className=\"nav-link-recipe\"\n                activeClass=\"active\"\n                to=\"recipes\"\n                offset={-50}>Go back to the top of the recipe</Link>\n          </Card.Text>\n        </Card.Body>\n          </Card>\n        </Tab.Pane>\n\n        <Tab.Pane eventKey=\"tikka-masala\" title=\"Mom's Tofu Tikka Masala\" >\n        <Card className=\"text-left full-height\" as=\"div\">\n          <Card.Body className=\"m-4\">\n            <Card.Title>Mom's Tofu Tikka Masala</Card.Title>\n           <Card.Subtitle className=\"mb-2 text-muted\">My go-to happy meal. Warm, rich curry with tofu blocks that make the perfect paneer substitute.</Card.Subtitle>\n          <Card.Text className=\"text-dark\">\n          <br/>\n            <h6 className=\"bold\" id=\"ingredients\"><b>Ingredients</b></h6>\n            <ul>\n            <li>14 oz extra firm tofu</li>\n            <li>5 tablespoons of coconut oil, vegan butter (<i>or non-vegan butter</i>)</li>\n            <li>4-5 cloves of minced garlic</li>\n            <li>1 white onion, diced</li>\n            <li>2 teaspoons coriander</li>\n            <li>2 teaspoons cumin</li>\n            <li>2 teaspoons turmeric</li>\n            <li>2 teaspoons garam masala</li>\n            <li>2 teaspoons curry powder</li>\n            <li>2 teaspoons chili powder</li>\n            <li>1 tablespoons tomato paste</li>\n            <li>15 oz can of tomato purée</li>\n            <li>15 oz can of full-fat coconut milk, <i>refrigerated overnight</i></li>\n            <li>Salt, to taste</li>\n            <li>Sugar, to taste</li>\n            </ul>\n\n            <br/>\n              <h6 className=\"bold\" id=\"steps\"><b>Steps</b></h6>\n              <ol>\n              <li>Press-dry tofu for 30 minutes by covering with dry rags then topping with a baking sheet with heavy objects on top (I used a cast iron). </li>\n              <li>Heat 2 to 3 tablespoons of coconut oil (or butter or vegan butter) til shimmering in a large pan.</li>\n              <li>Add minced garlic and diced onion, cook until fragrant (2-3 mins).</li>\n              <li>Add coriander powder, cumin powder, turmeric powder, garam masala, curry powder, 1 spoon of chili powder, 1 table spoon of tomato paste, and a pinch of salt. Continue to cook until spices are very fragrant, about 5-7 minutes.</li>\n              <li>Add full 15 oz can of tomato purée and simmer on medium heat for 5-10 minutes, stirring occasionally.</li>\n              <li>Once the tomato sauce, spices, and onions are fragrant and well cooked - add the canned full-fat coconut milk (if non-vegan, use cream). Stir and let simmer while covered for 10 to 15 mins.<i>Note: it will definitely splatter at this stage. Proceed with caution!</i> </li>\n              <li><i>Optional step to get slightly firmer tofu: </i>While that is cooking, cut the dried tofu into 1-inch blocks (could also use paneer, cottage cheese, chicken) in a spoon of oil. Then, add to to the sauce.</li>\n              <li>Add salt and sugar to taste. <i>My mom swears by the bit of sugar, it really matters!</i></li>\n              <li>Top with cilantro, serve with rice, naan, roti, or even on greens</li>\n\n              </ol>\n              <Link\n                className=\"nav-link-recipe\"\n                activeClass=\"active\"\n                to=\"recipes\"\n                offset={-50}>Go back to the top of the recipe</Link>\n          </Card.Text>\n        </Card.Body>\n          </Card>\n        </Tab.Pane>\n\n        <Tab.Pane eventKey=\"sp-gnocchi\" title=\"Sweet Potato Gnocchi\" >\n        <Card className=\"text-left\">\n          <Card.Body className=\"m-4\">\n            <Card.Title>Sweet Potato Gnocchi</Card.Title>\n           <Card.Subtitle className=\"mb-2 text-muted\">Coming Soon</Card.Subtitle>\n          <Card.Text className=\"text-dark\">\n          <br/>\n\n\n          </Card.Text>\n        </Card.Body>\n          </Card>\n        </Tab.Pane>\n      </Tab.Content>\n    </Col>\n  </Row>\n</Tab.Container>\n\n</Container>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Recipes;\n","import React, { Component } from \"react\";\n\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { Tabs, Tab,  NavDropdown, Nav, Form, Button, FormControl, Card, Container, Col, Row } from 'react-bootstrap';\n\nclass Work extends Component {\n  render() {\n\n    let rows = []\n    let images = [];\n\n    let renderData = [{\"img\": \"./MISymptoms.png\", \"title\": \"MI Symptoms\", \"role\": \"Lead\", \"year\": \"2020 - Present\", \"description\": \"\"},\n      {\"img\": \"./183.png\", \"title\": \"EECS 183\", \"role\": \"Instructional Aide (TA)\", \"year\": \"2017 - Present\", \"description\": \"\"},\n      {\"img\": \"./SevenMile.png\", \"title\": \"Seven Mile\", \"role\": \"President, Development Director\", \"year\": \"2016 - 2020\", \"description\": \"\"},\n      {\"img\": \"./BCG.png\", \"title\": \"BCG\", \"role\": \"Summer Associate\", \"year\": \"2019\", \"description\": \"\"},\n      {\"img\": \"./SADD.png\", \"title\": \"SADD\", \"role\": \"National Student Representative, Board of Directors\", \"year\": \"2016 - 2019\", \"description\": \"\"},\n      {\"img\": \"./Microsoft.png\", \"title\": \"Microsoft\", \"role\": \"Explore Intern\", \"year\": \"2018\", \"description\": \"\"}\n      ];\n\n\n    console.log(\"renderData: \", renderData);\n    for (var i = 0; i < renderData.length; ++i) {\n      images.push(  <Col sm={6} md={4} className=\"panel mb-2\">\n          <Card className=\"text-left work-box shadow-sm\">\n            <Card.Body className=\"work-box\" >\n              <Card.Img className=\"work-box-image\" variant=\"top\" src={\"./\" + renderData[i][\"img\"]} />\n              <Card.Title className=\"font-weight-normal work-box-title\">{renderData[i][\"title\"]}</Card.Title>\n              <Card.Subtitle className=\"work-box-subtitle mb-2\">{renderData[i][\"year\"]}</Card.Subtitle>\n              <Card.Subtitle className=\"work-box-subtitle\"><i>{renderData[i][\"role\"]}</i></Card.Subtitle>\n            <Card.Text className=\"small work-box-text\">\n            </Card.Text>\n          </Card.Body>\n          </Card>\n        </Col>);}\n\n        let nextRowCount = 1;\n      for (var i = 0; i < renderData.length; ++i) {\n        console.log(\"i: \", i, \" and i/3: \", i/3);\n        if(((i+1)/3) === nextRowCount){\n          rows.push (\n            <Row className=\"panel align-content-center lead\">\n            {images[i-2]} {images[i-1]} {images[i]}\n            </Row>\n          );\n          nextRowCount++;\n          console.log(\"pushed \", renderData[i-3], renderData[i-2],images[i-1])\n        }\n\n    }\n\n    return (\n           <div className=\"section section-work mb-8\" id=\"experience\">\n              <div className=\"section-content justify-content-md-center\" >\n              <Container className=\"justify-content-md-center work-container text-dark\" >\n              <h1 className=\"text-dark mb-4\">Work</h1>\n              {rows}\n\n              </Container>\n              </div>\n            </div>\n    );\n  }\n}\n\n\nexport default Work;\n","import React, { Component } from \"react\";\nimport logo from \"../logo.svg\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { Tabs, Tab,  NavDropdown, Nav, Form, Button, FormControl, Card, Container, Col, Row } from 'react-bootstrap';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"section section-about\" id=\"education\">\n      <div className=\"section-content\" >\n\n\n          <Container className=\"justify-content-md-center info-container\" >\n          <h1>About</h1>\n          <Row className=\"align-content-center justify-content-md-center content text\">\n          <Col xs={12} md={4}> <img src=\"./education.svg\" alt=\"education icon\" className=\"icon\"></img></Col>\n          <Col xs={12} md={8} className=\"text-left\">\n          <p>I'm a student at the University of Michigan pursuing a dual-degree in Business Administration and Computer Science, graduating in May 2021. At U of M, I teach EECS 183 and lead Seven Mile.</p>\n          </Col>\n          </Row>\n\n          <Row className=\"align-content-center  justify-content-md-center content text\">\n            <Col xs={12} md={4}><img src=\"./work.svg\" alt=\"work icon\" className=\"icon\"></img></Col>\n          <Col xs={12} md={8} className=\"text-left\">\n          <p>After graduation, I am excited to be joining the Boston Consulting Group as an Associate. I will be based in BCG's Detroit office.</p>\n          </Col>\n          </Row>\n\n          <Row className=\"align-content-center  justify-content-md-center content text\">\n            <Col xs={12} md={4}><img src=\"./study.svg\" alt=\"book icon\" className=\"icon\"></img></Col>\n          <Col xs={12} md={8} className=\"text-left\">\n          <p>In my free time, I love to read, work out, listen to or play music, and cook. See some of my favorite recipes below.</p>\n          </Col>\n          </Row>\n          </Container>\n\n  </div>\n      </div>\n    );\n  }\n}\n\n\nexport default About;\n","import React from \"react\";\nimport Recipes from \"./Recipes\";\nimport Work from \"./Work\";\nimport About from \"./About\";\n\n// import ImgBg from \"../../public/home-background.png\";\nimport { Container, Row, Col, Image, Card } from 'react-bootstrap';\n\nexport default function Section({ title, subtitle, dark, id }) {\n\n  if(title===\"about\"){\n    return (\n      <About/>\n    );\n  }else if(title===\"experience\"){\n    return (\n      <Work/>\n    );\n  }else if(id===\"recipes\"){\n      return (\n      <Recipes/>\n\n      );\n  }else if(id===\"section1\"){\n\n  return (\n    <div className={\"top section\" + (dark ? \" section-dark\" : \" section-light\")}>\n    <Container className=\"justify-content-md-space-around\" id=\"section1\">\n    <Row>\n    <Col md={12} lg={0}><br/><br/></Col>\n    <Col md={12} lg={3} className=\"introtext\">\n      <p >Hi, I’m Kirtana. I’m passionate about making the world a better place, and love to use technology and business to do so.</p></Col>\n\n        <Col md={12} lg={9} className=\"imageholder\">\n\n      <Image alt=\"Kirtana Choragudi and 2 pictures of her\" className=\"backgroundimage\" src=\"./home-background.png\" fluid/>\n      </Col>\n\n    </Row>\n\n          </Container>\n      </div>\n\n  );\n//}\n// else if(id===\"recipes\"){\n//\n// return (\n// <Recipes/>\n//\n// );\n}else{\n\n  return (\n    <div className={\"section\" + (dark ? \" section-dark\" : \" section-light\")}>\n      <div className=\"section-content\" id={id}>\n        <h1>{title}</h1>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n}\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport './custom.scss';\nimport MyNavbar from \"./Components/Navbar\";\nimport Section from \"./Components/Section\";\nclass App extends Component {\n  render() {\n  const dummyText = `dummytext`;\n    return (\n      <div className=\"App\">\n        <MyNavbar />\n        <Section\n          title=\"Section 1\"\n    \n          dark={false}\n          id=\"section1\"\n        />\n\n        <Section\n          title=\"about\"\n          dark={true}\n          id=\"education\"\n        />\n        <Section\n          title=\"experience\"\n          dark={false}\n          id=\"experience\"\n        />\n        <Section\n          title=\"recipes\"\n          dark={false}\n          id=\"recipes\"\n        />\n\n      </div>\n    );\n  }\n}\n// <Section\n//   title=\"education\"\n//   dark={true}\n//   id=\"education\"\n// />\n// <Section\n//   title=\"experience\"\n//   dark={false}\n//   id=\"experience\"\n// />\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}